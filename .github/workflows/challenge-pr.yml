name: Challenge Pull Request

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  challenge-pr:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Add pipconf
        run: |
          mkdir ~/.pip
          cat << EOF >> ~/.pip/pip.conf
          [global]
          trusted-host = pypi.fury.io
          extra-index-url = https://${{ secrets.GEMFURY_PULL_TOKEN }}@pypi.fury.io/ssaunier
          EOF

      - name: Install dependencies
        run: |
          pip install -U pip
          pip install wagon_common challengify

      - name: Clone data-engineering-challenges
        uses: actions/checkout@v2
        with:
          repository: lewagon/data-engineering-challenges
          token: ${{ secrets.AUTOBOT_GH_TOKEN }}
          path: data-engineering-challenges

      - name: Prepare challenge branch
        run: |
          BRANCH_NAME=${{ github.head_ref }}-challengify
          cd data-engineering-challenges
          git config user.name github-actions
          git config user.email github-actions@github.com
          git fetch
          if echo $(git branch --all) | grep -q "$BRANCH_NAME"; then
            echo 'Branch exists and will be updated'
            git checkout --track "origin/${BRANCH_NAME}"
            git pull origin "${BRANCH_NAME}"
          else
            git checkout -b $BRANCH_NAME
          fi

      - name: Challengify
        run: |
          cd "${{ github.workspace }}"
          git diff --name-only --diff-filter AM "origin/${{ github.event.repository.default_branch }}" | sed 's/^/"/g' | sed 's/$/"/g' | tr '\n' ' ' | xargs challengify run -d ./data-engineering-challenges

      - name: Create challenge pull request
        run: |
          PR_NUMBER=$(echo ${{ github.ref }} | awk 'BEGIN { FS = "/" } ; { print $3 }')
          BRANCH_NAME=${{ github.head_ref }}-challengify
          cd data-engineering-challenges
          echo git branch --list
          if [ -z "$(git status --porcelain)" ]; then
            echo 'Working directory clean'
          else
            git add .
            git commit --message "challengify ${{ github.head_ref }}"
            git push origin $BRANCH_NAME
            if echo $(gh pr list) | grep -q "$BRANCH_NAME"; then
              echo 'PR exists and will be updated'
            else
              gh pr create --draft --title "Challengify ${{ github.head_ref }}" --body "This mirrors updates from https://github.com/lewagon/data-engineering-solutions/pull/${PR_NUMBER}"
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.AUTOBOT_GH_TOKEN }}
